<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/user/OneDrive - RiyadhBoys/Project/Blog.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1028"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainArticles"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Articles" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="90"/><column index="2" value="86"/><column index="3" value="124"/><column index="4" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Comments" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="97"/><column index="2" value="134"/><column index="3" value="297"/><column index="4" value="40"/><column index="5" value="65"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">SELECT * FROM Students WHERE class NOT IN(&quot;five&quot; , &quot;four&quot;)


</sql><sql name="SQL 3">/*SELECT * FROM Students WHERE age BETWEEN 10 AND 12*/
/*SELECT * FROM Students WHERE age &gt;= 10 AND age &lt;= 12*/
</sql><sql name="SQL 4">/*INSERT INTO Students (FirstName,age,class) VALUES (&quot;Ahmad&quot;,12,&quot;seven&quot;)*/</sql><sql name="SQL 5">/*SELECT * FROM Students WHERE LastName IS NULL*/
SELECT * FROM Students WHERE LastName IS NOT NULL</sql><sql name="SQL 6">SELECT * FROM Students ORDER BY age ASC</sql><sql name="SQL 7">SELECT FirstName,age FROM Students ORDER BY 2 DESC</sql><sql name="SQL 8">UPDATE Students
SET LastName = &quot;hasan&quot;
WHERE FirstName = &quot;ibrahim&quot; AND LastName=&quot;Anas&quot; AND age = 9 AND class = &quot;four&quot;</sql><sql name="SQL 9">UPDATE Students
SET age = 11,class = &quot;six&quot;
WHERE FirstName = &quot;Ahmad&quot; AND LastName=&quot;Anas&quot; AND age = 10 AND class = &quot;five&quot;</sql><sql name="SQL 10">DELETE FROM Students 
WHERE FirstName = &quot;mahmoud&quot; AND LastName = &quot;Anas&quot; AND age = 12</sql><sql name="SQL 11">SELECT FirstName,LastName,age FROM Students WHERE FirstName LIKE &quot;m%&quot; AND age ORDER BY age DESC</sql><sql name="SQL 12">UPDATE Students
SET  age = 13,LastName=&quot;hasan&quot;,class=&quot;eight&quot;
WHERE FirstName = &quot;ola&quot; </sql><sql name="SQL 13">/*jوحده جديده*/</sql><sql name="SQL 14">SELECT count(*),count(color) FROM Market</sql><sql name="SQL 15">SELECT count(*) FROM Market WHERE Year = &quot;2018&quot;</sql><sql name="SQL 16">SELECT sum(Price) FROM Market WHERE Year IN (&quot;2018&quot;,&quot;2019&quot;)</sql><sql name="SQL 18">/*SELECT max(Price)FROM Market WHERE Year = &quot;2018&quot;*/
/*SELECT * FROM Market WHERE Price = (SELECT min (Price) FROM Market WHERE Year = &quot;2019&quot; AND Name = &quot;Shoes&quot;)*/
</sql><sql name="SQL 19">SELECT AVG(Price) FROM Market WHERE Year=&quot;2019&quot;</sql><sql name="SQL 20">SELECT AVG(Price) FROM Market WHERE Year != &quot;2017&quot; AND Name &lt;&gt; &quot;Sweater&quot;</sql><sql name="SQL 21">SELECT Name AS Product, count(*) AS Number FROM Market WHERE Year = &quot;2017&quot; GROUP BY Name</sql><sql name="SQL 22">SELECT Name,Color, count (*) FROM Market WHERE Year = &quot;2017&quot; GROUP BY Name, Color</sql><sql name="SQL 23">SELECT Name,max (Price) FROM Market WHERE Year = &quot;2018&quot; GROUP BY Name HAVING Price = max (Price)</sql><sql name="SQL 24">/*SELECT DISTINCT Color FROM Market WHERE Year = &quot;2019&quot; AND Name = &quot;Shoes&quot;*/</sql><sql name="SQL 25">SELECT count(DISTINCT ConsumerName) AS Number FROM Market  WHERE Year = &quot;2017&quot;</sql><sql name="SQL 26">SELECT ConsumerName,Name, count(*) AS Number FROM Market WHERE Year = &quot;2020&quot; GROUP BY  ConsumerName,Name</sql><sql name="SQL 27">/*SELECT Name,Color,max(Price) AS Price   FROM Market WHERE Year = &quot;2020&quot; GROUP BY Name HAVING Price = max (Price)*/
SELECT Name,Color,min(Price) AS Price   FROM Market WHERE Year = &quot;2020&quot; GROUP BY Name HAVING Price = min (Price)</sql><sql name="SQL 29">CREATE TABLE &quot;Courses&quot; (
	&quot;CourseID&quot; INTEGER PRIMARY KEY,
	&quot;CourseName&quot; TEXT,
	&quot;Lecturer&quot; TEXT,
	&quot;Price&quot; INTEGER,
	&quot;DepartementName&quot; TEXT,
	&quot;Head&quot; TEXT
	)</sql><sql name="SQL 30">CREATE TABLE &quot;Students&quot; (
	&quot;StudentID&quot; INTEGER PRIMARY KEY,
	&quot;FirstName&quot; TEXT,
	&quot;LastName&quot; TEXT,
	&quot;Gender&quot; TEXT,
	&quot;email&quot; TEXT,
	&quot;RegDate&quot; TEXT,
	&quot;PhoneNO&quot; INTEGER,
	&quot;CourseID&quot; INTEGER,
	FOREIGN KEY (CourseID) REFERENCES Courses (CourseID)
	)</sql><sql name="SQL 31">INSERT INTO Courses (CourseID, CourseName, Lecturer, Price, DepartementName, Head)
VALUES
	(1111, &quot;PHP&quot;, &quot;Ramiz&quot;, 160, &quot;Programming&quot;, &quot;Eng.Ahmad&quot;),
	(2222, &quot;JavaScript&quot;, &quot;Hadi&quot;, 100, &quot;Programming&quot;, &quot;Eng.Ahmad&quot;),
	(3333, &quot;Ruby&quot;, &quot;Hasan&quot;, 160, &quot;Programming&quot;, &quot;Eng.Ahmad&quot;)</sql><sql name="SQL 32">INSERT INTO Students (StudentID, FirstName, LastName, Gender, email, RegDate, PhoneNO, CourseID)
VALUES
	( 3, &quot;Hasan&quot;, &quot;Anas&quot;, &quot;Man&quot;, &quot;Ahmad@gmail.com&quot;, &quot;24-OCT-2020&quot;, 0534589741, 2222)</sql><sql name="SQL 34">SELECT Courses.CourseName,
		Courses.Price,
		Students.FirstName,
		Students.LastName,
		Students.RegDate
FROM Courses
LEFT JOIN Students
ON Students.CourseId = Courses.CourseId
/*WHERE CourseName = &quot;PHP&quot;*/

</sql><sql name="SQL 36">SELECT FirstName FROM Students WHERE Gender = &quot;Woman&quot;
UNION
SELECT CourseName FROM Courses</sql><sql name="SQL 37">SELECT * FROM Students WHERE Gender = &quot;Woman&quot;
/*UNION
SELECT * FROM Students WHERE FirstName = &quot;Hiba&quot;*/</sql><sql name="SQL 38">SELECT CourseName,
(
	SELECT count(*)
	FROM Students
	WHERE Students.CourseId = Courses.CourseId
) AS Number
FROM Courses

</sql><sql name="SQL 39">SELECT CourseName,
(
	SELECT count(*)
	FROM Students
	WHERE Students.CourseId = Courses.CourseId 
) AS Number
FROM Courses
WHERE CourseName &lt;&gt;&quot;Python&quot; AND CourseName &lt;&gt;&quot;C#&quot;</sql><sql name="SQL 40">SELECT *
FROM Courses
WHERE CourseId IN (
	SELECT CourseId
	FROM Students
)</sql><sql name="SQL 41">INSERT INTO Students
SELECT * FROM OldStudents</sql><sql name="SQL 42">INSERT INTO Students (FirstName,LastName,Gender,email,RegDate,PhoneNo,CourseId)
SELECT FirstName,LastName,Gender,email,RegDate,PhoneNo,CourseId FROM OldStudents</sql><sql name="SQL 44">UPDATE Customers
SET Remaining=Remaining-
(SELECT Amount
FROM installments
WHERE Customers.CustomerID = installments.CustomerID
)</sql><sql name="SQL 46">DELETE FROM Articles WHERE ArticleID = 2222</sql><sql name="SQL 47">DELETE FROM Comments WHERE ArticleID = 2222</sql><current_tab id="38"/></tab_sql></sqlb_project>
